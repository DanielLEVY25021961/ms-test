# Encodé en UTF-8

# CONFIGURATION DU SERVICE de TEST en mode DEV.

# *****************************************************
# CONFIGURATION SPRING.
# *****************************************************
# désactive la bannière SPRING dans la console.
spring.main.banner-mode=off

# fixe le niveau de LOG de SPRING
# NIVEAUX DE LOG : OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL
logging.level.org.springframework=ERROR
logging.level.web = ERROR

# active ou désactive la page d'erreur standard de SPRING whitelabel
server.error.whitelabel.enabled=false

# désactiver cette ligne exclut les pages d'erreurs générées par le serveur TOMCAT
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

# permet d'inclure les piles d'Exceptions
server.error.include-stacktrace=always


# *****************************************************
# CONFIGURATION DU MICRO-SERVICE TEST-SERVICE en DEV.
# *****************************************************
# Port d'écoute du Micro-Service.
server.port=8079
# Nom du Micro-Service vu par le PROXY (GATEWAY) et le REGISTRY EUREKA (annuaire des micro-services).
spring.application.name=TEST-SERVICE

# *****************************************************
# DECOUVERTE DU SERVICE DE CONFIGURATION CENTRALISEE
# *****************************************************
spring.cloud.config.uri=http://localhost:8888

# *****************************************************
# DECOUVERTE DU SERVICE D'ANNUAIRE EUREKA REGISTRY
# *****************************************************
# Active/desactive l'enregistrement automatique du présent Micro-Service auprès de REGISTRY EUREKA (annuaire des micro-services).
spring.cloud.discovery.enabled=true

#ENREGISTREMENT DYNAMIQUE AUPRES DE L'ANNUAIRE.
# précise l'adresse URL du Micro-service EUREKA REGISTRY (annuaire de Micro-Services) à appeler pour s'enregistrer auprès d'EUREKA.
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


# ===========================================================================
# DATASOURCE H2 IN MEMORY
# ===========================================================================
# Active la console Web de la BD H2 à URL_SERVICE/h2-console.
spring.h2.console.enabled=true

# indique à SPRING que le schema DDL à utiliser est celui de H2
#spring.datasource.platform=h2

# demande à SPRING de toujours initialiser la DataSource (SPRING ne le fait automatiquement que pour les bases embarquées comme H2).
#spring.datasource.initialization-mode=always
# url
spring.datasource.url=jdbc:h2:mem:base-TEST-SERVICE
# Driver
spring.datasource.driver-class-name=org.h2.Driver
# Login
spring.datasource.username=sa
# Password
spring.datasource.password=

# DIALECTE DE BASE DE DONNEES
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect